{"mappings":"gfAAAA,EAAA,S,IAQIC,EACAC,EACAC,E,aANEC,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAClCG,EAASJ,SAASC,cAAc,SAKtCF,EAAQM,iBACN,SACA,SAAAC,G,OAAUV,EAAYW,OAAOD,EAAME,OAAOC,M,IAG5CP,EAAOG,iBACL,SACA,SAAAC,G,OAAUT,EAAWU,OAAOD,EAAME,OAAOC,M,IAG3CN,EAASE,iBACP,SACA,SAAAC,G,OAAUR,EAAaS,OAAOD,EAAME,OAAOC,M,IAuB7CL,EAAOC,iBAAiB,UApBxB,SAAkBC,G,kBAIdI,YAAW,WAkBf,IAAuBC,EAAUC,EACzBC,GADeF,EAjBHb,EAiBac,EAjBDhB,EAkBxBiB,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,Q,KAtBJC,MAAK,SAAAC,GAAWA,EAART,SAAeS,EAALR,MACjBS,EAAAC,OAAOC,QACL,uBAAuCC,OAAd,CAACC,EAAI,GAAG,QAA+BD,OAAzB5B,EAAY6B,EAAI5B,EAAS,M,IAGnE6B,OAAM,SAAAN,GAAWA,EAART,SAAeS,EAALR,MAClBS,EAAAC,OAAOK,QACL,sBAAoCH,OAAd,CAACC,EAAI,GAAG,QAA+BD,OAAzB5B,EAAY6B,EAAI5B,EAAS,M,MAGlED,EAAY6B,EAAI5B,E,EAfrBS,EAAMsB,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAI/B,EAAY+B,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector(\"input[name='delay']\");\nconst stepEl = document.querySelector(\"input[name='step']\");\nconst amountEl = document.querySelector(\"input[name='amount']\");\nconst formEl = document.querySelector('.form');\nlet delayUser;\nlet stepUser;\nlet amountUser;\n\ndelayEl.addEventListener(\n  'input',\n  event => (delayUser = Number(event.target.value))\n);\n\nstepEl.addEventListener(\n  'input',\n  event => (stepUser = Number(event.target.value))\n);\n\namountEl.addEventListener(\n  'input',\n  event => (amountUser = Number(event.target.value))\n);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < amountUser; i += 1) {\n    setTimeout(() => {\n      createPromise(amountUser, delayUser)\n        .then(({ position, delay }) => {\n          Notify.success(\n            `✅ Fulfilled promise ${[i + 1]} in ${delayUser + i * stepUser}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(\n            `❌ Rejected promise ${[i + 1]} in ${delayUser + i * stepUser}ms`\n          );\n        });\n    }, delayUser + i * stepUser);\n  }\n}\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject('error');\n    }\n  });\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$delayUser","$ce04d3a99e08e73b$var$stepUser","$ce04d3a99e08e73b$var$amountUser","$ce04d3a99e08e73b$var$delayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$formEl","addEventListener","event","Number","target","value","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","then","param","$h6c0i","Notify","success","concat","i","catch","failure","preventDefault","i1","_loop"],"version":3,"file":"03-promises.182476ab.js.map"}
{"mappings":"oeAAAA,EAAA,S,iBAIA,MAAMC,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAClCG,EAASJ,SAASC,cAAc,SACtC,IAAII,EACAC,EACAC,EAuCJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,QAAQ,G,CA3CrBjB,EAAQkB,iBACN,SACAC,GAAUb,EAAYc,OAAOD,EAAME,OAAOC,SAG5CnB,EAAOe,iBACL,SACAC,GAAUZ,EAAWa,OAAOD,EAAME,OAAOC,SAG3ClB,EAASc,iBACP,SACAC,GAAUX,EAAaY,OAAOD,EAAME,OAAOC,SAuB7CjB,EAAOa,iBAAiB,UApBxB,SAAkBC,GAChBA,EAAMI,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAYgB,GAAK,EACnCC,YAAW,KACThB,EAAcD,EAAYF,GACvBoB,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAAC,OAAOC,QACL,uBAAqB,CAAKL,EAAI,SAASlB,EAAYkB,EAAIjB,MACtD,IAEJuB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAAC,OAAOG,QACL,sBAAoB,CAAGP,EAAI,SAASlB,EAAYkB,EAAIjB,MACrD,GACD,GACHD,EAAYkB,EAAIjB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector(\"input[name='delay']\");\nconst stepEl = document.querySelector(\"input[name='step']\");\nconst amountEl = document.querySelector(\"input[name='amount']\");\nconst formEl = document.querySelector('.form');\nlet delayUser;\nlet stepUser;\nlet amountUser;\n\ndelayEl.addEventListener(\n  'input',\n  event => (delayUser = Number(event.target.value))\n);\n\nstepEl.addEventListener(\n  'input',\n  event => (stepUser = Number(event.target.value))\n);\n\namountEl.addEventListener(\n  'input',\n  event => (amountUser = Number(event.target.value))\n);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < amountUser; i += 1) {\n    setTimeout(() => {\n      createPromise(amountUser, delayUser)\n        .then(({ position, delay }) => {\n          Notify.success(\n            `✅ Fulfilled promise ${[i + 1]} in ${delayUser + i * stepUser}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(\n            `❌ Rejected promise ${[i + 1]} in ${delayUser + i * stepUser}ms`\n          );\n        });\n    }, delayUser + i * stepUser);\n  }\n}\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject('error');\n    }\n  });\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$formEl","$47d4ff9957288465$var$delayUser","$47d4ff9957288465$var$stepUser","$47d4ff9957288465$var$amountUser","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","event","Number","target","value","preventDefault","i","setTimeout","then","$iQIUW","Notify","success","catch","failure"],"version":3,"file":"03-promises.fd9dadfe.js.map"}